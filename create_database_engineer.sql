-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.actor
(
    id_actor integer NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    CONSTRAINT actor_pkey PRIMARY KEY (id_actor)
);

CREATE TABLE IF NOT EXISTS public.cast_
(
    id_cast integer NOT NULL,
    "cast" character varying COLLATE pg_catalog."default",
    CONSTRAINT cast__pkey PRIMARY KEY (id_cast)
);

CREATE TABLE IF NOT EXISTS public.cast_actor
(
    id_cast_actor integer NOT NULL,
    id_cast integer,
    id_actor integer,
    CONSTRAINT cast_actor_pkey PRIMARY KEY (id_cast_actor)
);

CREATE TABLE IF NOT EXISTS public.category
(
    id_category integer NOT NULL,
    type character varying COLLATE pg_catalog."default",
    CONSTRAINT type_pkey PRIMARY KEY (id_category)
);

CREATE TABLE IF NOT EXISTS public.country
(
    id_country integer NOT NULL,
    country character varying COLLATE pg_catalog."default",
    CONSTRAINT country_pkey PRIMARY KEY (id_country)
);

CREATE TABLE IF NOT EXISTS public.director
(
    id_director integer NOT NULL,
    director character varying COLLATE pg_catalog."default",
    CONSTRAINT director_pkey PRIMARY KEY (id_director)
);

CREATE TABLE IF NOT EXISTS public.gender
(
    id_gender integer NOT NULL,
    listed_in character varying COLLATE pg_catalog."default",
    CONSTRAINT gender_pkey PRIMARY KEY (id_gender)
);

CREATE TABLE IF NOT EXISTS public.platform
(
    id_platform integer NOT NULL,
    plataforma character varying COLLATE pg_catalog."default",
    CONSTRAINT platform_pkey PRIMARY KEY (id_platform)
);

CREATE TABLE IF NOT EXISTS public.program
(
    id_program integer NOT NULL,
    id_show character varying COLLATE pg_catalog."default",
    id_category integer,
    title character varying COLLATE pg_catalog."default",
    id_director integer,
    id_cast integer,
    id_country integer,
    date_added date,
    date_released date,
    id_rating integer,
    duration integer,
    id_gender integer,
    id_platform integer,
    CONSTRAINT program_pkey PRIMARY KEY (id_program)
);

CREATE TABLE IF NOT EXISTS public.rating
(
    id_rating integer NOT NULL,
    rating character varying COLLATE pg_catalog."default",
    CONSTRAINT rating_pkey PRIMARY KEY (id_rating)
);

CREATE TABLE IF NOT EXISTS public.director_name_dir
(
    id_director_name_dir integer,
    id_director integer,
    id_name_dir integer,
    PRIMARY KEY (id_director_name_dir)
);

CREATE TABLE IF NOT EXISTS public.name_dir
(
    id_name_dir integer,
    "Nombre" character varying[],
    PRIMARY KEY (id_name_dir)
);

ALTER TABLE IF EXISTS public.cast_actor
    ADD CONSTRAINT cast_actor_id_actor_fkey FOREIGN KEY (id_actor)
    REFERENCES public.actor (id_actor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cast_actor
    ADD CONSTRAINT cast_actor_id_cast_fkey FOREIGN KEY (id_cast)
    REFERENCES public.cast_ (id_cast) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_cast_fkey FOREIGN KEY (id_cast)
    REFERENCES public.cast_ (id_cast) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_country_fkey FOREIGN KEY (id_country)
    REFERENCES public.country (id_country) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_director_fkey FOREIGN KEY (id_director)
    REFERENCES public.director (id_director) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_gender_fkey FOREIGN KEY (id_gender)
    REFERENCES public.gender (id_gender) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_platform_fkey FOREIGN KEY (id_platform)
    REFERENCES public.platform (id_platform) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_rating_fkey FOREIGN KEY (id_rating)
    REFERENCES public.rating (id_rating) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.program
    ADD CONSTRAINT program_id_type_fkey FOREIGN KEY (id_category)
    REFERENCES public.category (id_category) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.director_name_dir
    ADD FOREIGN KEY (id_director)
    REFERENCES public.director (id_director) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.director_name_dir
    ADD FOREIGN KEY (id_name_dir)
    REFERENCES public.name_dir (id_name_dir) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;